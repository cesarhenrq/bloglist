name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: show commit message
        run: echo ${{ github.event.commits.*.message }}

  frontend:
    runs-on: ubuntu-20.04
    if: ${{contains(toJson(github.event.commits.*.message), '#frontend') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Check for linting errors
        working-directory: frontend
        run: npm run lint

      - name: Build
        working-directory: frontend
        run: npm run build

      - name: Notify Build Failure
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: failure()
        with:
          severity: error
          text: Build failed
          description: The build failed on ${{ github.sha }} by ${{ github.actor }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Unit tests
        working-directory: frontend
        run: npm run test:unit

      - name: Install wait-on
        run: npm install -g wait-on

      - name: Install backend dependencies
        working-directory: backend
        run: npm install

      - name: Start backend server
        working-directory: backend
        run: npm run start:test &
        env:
          PORT: ${{ vars.PORT }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Wait for backend to be ready
        run: |
          echo "Waiting for backend to be ready..."
          wait-on http://localhost:${{ vars.PORT }}
        timeout-minutes: 2

      - name: E2E tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: frontend
          command: npm run test:e2e
          start: npm run start
          wait-on: http://localhost:3000

      - name: Trigger deployment
        if: github.event_name == 'push'
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

      - name: Notify deployment
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: ${{ github.event_name == 'push' && success() }}
        with:
          severity: info
          text: A new version has been deployed
          description: to ${{ vars.PROD_URL }} by ${{ github.actor }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  backend:
    runs-on: ubuntu-20.04
    if: ${{contains(toJson(github.event.commits.*.message), '#backend') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: backend
        run: npm install

      - name: Check for linting errors
        working-directory: backend
        run: npm run lint

      - name: Unit tests
        working-directory: backend
        run: npm run test
        env:
          PORT: ${{ vars.PORT }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}

      - name: Trigger deployment
        if: github.event_name == 'push'
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

      - name: Notify deployment
        uses: rjstone/discord-webhook-notify@v1.0.4
        if: ${{ github.event_name == 'push' && success() }}
        with:
          severity: info
          text: A new version has been deployed
          description: to ${{ vars.PROD_URL }} by ${{ github.actor }}
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

  tag_release_frontend:
    runs-on: ubuntu-20.04
    needs: frontend
    if: ${{github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

  tag_release_backend:
    runs-on: ubuntu-20.04
    needs: backend
    if: ${{github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
